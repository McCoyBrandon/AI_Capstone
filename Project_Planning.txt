Sprint 1 - Starting week of 9/9/2025, ending 9/16/2025
Actionable Deliverables:
1. Project Structure
2. Required packages and start of a 'requirements.txt' file.
3. Start of the baseline code for transformer
  + Splitting the data into train, validation, and test sets.
  + Review split data for class disparaties
  + Variable metrics
  + Using 'from scratch' tutorial to learn the basics and create a baseline.
4. Prepare being able to explain and review the transformer for further feedback on 9/16/2025.

Sprint 2 - Starting week of 9/16/2025, ending 9/23/2025
Actionable Deliverables:
1. Brandon
a. Add the type of machine failure? (multi-classification)
b. Evaluation metrics

2. Venugopal
a. Computing metrics
b. Updating repository to match provided recommendations

Sprint 3 - Starting week of 9/23/2025, ending 9/30/2025
Actionable Deliverables:
1. Brandon
a. Resolve ongoing multi-class column issues.
b. Expand evaluation metrics to class imbalance
c. Address class imbalance issues
d. Read through provided DevOps material to consider additional training metrics needed for presentation
2. Venugopal
a. Updating repository to match provided recommendations in DevOps material
b. Have model save pretrained weights
c. Create file that uses pre-trained model and run against test dat
d. Computing metrics

Sprint 4 - Starting week of 9/30/2025, ending 10/7/2025
1. Brandon
a. Finalize which class imbalance method we are using
b. Have evaluation metrics save into .json file for continued monitoring.
C. Have model saves and metrics saved together in the runs folder
d. Run models with varying parameters to start tuning the model.
e. Broke out code from single file into their modular puprpose files

2. Venugopal
a. Continued maintenance on the GitHub repository
b. Have model save pretrained weights
c. Continue computing metrics review
d. Documentation review, seeing where we need to update and depreciate

Sprint 5 - Starting week of 10/7/2025, ending 10/14/2025
1. Brandon
a. Fitting split out documents into the updated repository structure
b. Build run file to be used for presenting the model
c. Update README documentation for the build run file
c. Collaborate on the TensorBoard with Venugopal

2. Venugopal
a. Finalize computing metrics on the evaluation run
b. Start on the TensorBoard usage in the training and evaluation runs
c. Review documentation and commenting
